# voltage_source.py

## Class definition for the VoltageSource class
# The VoltageSource class is a subclass of the Component class. It represents a voltage source in an
# electrical circuit. Voltage sources provide a fixed voltage difference between two points in the
# circuit, and can be used to model batteries or other power sources. Voltage sources can connect to
# two junctions. The voltage across a voltage source is constant and independent of the current flowing
# through it. The power provided by a voltage source is calculated as the product of the voltage and
# current, and is always negative, indicating that energy is entering the circuit through the voltage
# source (known as passive sign convention).

## FIRST PRINCIPLES
# Power Law: P = IV: Power = Current * Voltage. This is the fundamental relationship between power,
# current, and voltage in an electrical circuit. It is used to calculate the power dissipated or
# generated by a component given the current and voltage, the current through a component given the
# power and voltage, and the voltage across a component given the power and current.

# The VoltageSource class has the following attributes:
# - component_id: A unique identifier for the voltage source (provided to the constructor)
# - junctions: A list of connected junctions (exactly 2) (provided to the constructor)
# - voltage: The voltage difference provided by the voltage source (provided to the constructor)
# - current: The current through the voltage source (calculated elsewhere in the program)
# - power: The power provided by the voltage source (calculated elsewhere in the program)

# The attributes inherited from the Component class that are defined or not used:
# - component_type: The type of the component (voltage source by definition)

# The VoltageSource class has the following methods:
# - get_current(): Returns the current through the voltage source (inherits from Component)
# - set_current(current): Sets the current through the voltage source (inherits from Component)
# - get_id(): Returns the ID of the voltage source (inherits from Component)
# - get_junctions(): Returns the list of connected junctions (inherits from Component)
# - add_junction(junction): Adds a junction to the list of connected junctions (inherits from Component)
# - remove_junction(junction): Removes a junction from the list of connected junctions (inherits from Component)
# - validate_voltage_source(): Validates the voltage source and returns a list of validation errors
#   (called by the validate method of the Component class)

from component import Component

class VoltageSource(Component):
    def __init__(self, component_id, junctions, voltage):
        super().__init__(component_id, junctions, "voltage source")
        self.voltage = voltage

    def validate_voltage_source(self):
        errors = []
        if len(self.junctions) != 2:
            errors.append("Voltage source {} does not have exactly 2 junctions".format(self.component_id))
        return errors
    
    